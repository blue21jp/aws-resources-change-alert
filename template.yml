AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref AWS::StackName
      CodeUri: app/
      Handler: main.lambda_handler
      Runtime: python3.13
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          SLACK_TOKEN_PARAM: "/resources-change-alert/slack/bot-token"
          SLACK_CHANNEL: "#general"
          BEDROCK_REGION: !Ref AWS::Region
          BEDROCK_MODEL_ID: "us.amazon.nova-premier-v1:0"
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/resources-change-alert/slack/bot-token
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource:
                - arn:aws:bedrock:*::foundation-model/*
                - !Sub arn:aws:bedrock:*:${AWS::AccountId}:inference-profile/*
      Events:
        IAMUserChangeEvent:
          Type: EventBridgeRule
          Properties:
            RuleName: !Sub "${AWS::StackName}-iam"
            Pattern:
              source:
                - aws.iam
              detail-type:
                - AWS API Call via CloudTrail
              detail:
                eventSource:
                  - iam.amazonaws.com
                eventName:
                  - CreateUser
                  - DeleteUser
                  - AttachUserPolicy
                  - DetachUserPolicy
                  - PutUserPolicy
                  - DeleteUserPolicy
        #NetworkChangeEvent:
        #  Type: EventBridgeRule
        #  Properties:
        #    RuleName: !Sub "${AWS::StackName}-network"
        #    Pattern:
        #      source:
        #        - aws.ec2
        #      detail-type:
        #        - AWS API Call via CloudTrail
        #      detail:
        #        eventSource:
        #          - ec2.amazonaws.com
        #        eventName:
        #          - AuthorizeSecurityGroupIngress
        #          - RevokeSecurityGroupIngress
        #          - AuthorizeSecurityGroupEgress
        #          - RevokeSecurityGroupEgress
        #RDSChangeEvent:
        #  Type: EventBridgeRule
        #  Properties:
        #    RuleName: !Sub "${AWS::StackName}-rds"
        #    Pattern:
        #      source:
        #        - aws.rds
        #      detail-type:
        #        - AWS API Call via CloudTrail
        #      detail:
        #        eventSource:
        #          - rds.amazonaws.com
        #        eventName:
        #          - ModifyDBInstance
        #          - ModifyDBCluster
        #          - CreateDBInstance
        #          - DeleteDBInstance

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}"
      RetentionInDays: 1
